<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="HTMLPurifier_StringHashParser" namespace="" name="HTMLPurifier_StringHashParser" abstract="false" final="false" start="28" end="104">
  <file path="/home/user/Documents/DVWA-master/build/../src/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier" file="StringHashParser.php" realpath="/home/user/Documents/DVWA-master/src/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/StringHashParser.php" size="3189" time="2017-02-13T08:45:29+00:00" unixtime="1486975529" sha1="d5a0d9ac3a180d0171b5736273d23576aebb7f3f" relative="external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/StringHashParser.php"/>
  <docblock>
    <description compact="Parses string hash files. File format is as such:">DefaultKeyValue
     KEY: Value
     KEY2: Value2
     --MULTILINE-KEY--
     Multiline
     value.

Which would output something similar to:

     array(
         'ID' =&gt; 'DefaultKeyValue',
         'KEY' =&gt; 'Value',
         'KEY2' =&gt; 'Value2',
         'MULTILINE-KEY' =&gt; "Multiline\nvalue.\n",
     )

We use this as an easy to use file-format for configuration schema
files, but the class itself is usage agnostic.

You can use ---- to forcibly terminate parsing of a single string-hash;
this marker is used in multi string-hashes to delimit boundaries.</description>
  </docblock>
  <member name="default" type="string" default="'ID'" visibility="public" static="false" line="31"/>
  <method name="parseFile" start="36" end="43" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Parses a file that contains a single string-hash."/>
    </docblock>
    <parameter name="file" byreference="false" type="{unknown}"/>
  </method>
  <method name="parseMultiFile" start="48" end="58" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Parses a file that contains multiple string-hashes delimited by '----'"/>
    </docblock>
    <parameter name="file" byreference="false" type="{unknown}"/>
  </method>
  <method name="parseHandle" start="68" end="102" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Internal parser that acepts a file handle."/>
      <note value="While it's possible to simulate in-memory parsing by using">custom stream wrappers, if such a use-case arises we should
      factor out the file handle into its own class.</note>
      <param description="handle with pointer at start of valid string-hash" variable="$fh" type="object">block.<type full="File" namespace="" name="File"/></param>
    </docblock>
    <parameter name="fh" byreference="false" type="{unknown}"/>
  </method>
</class>
