<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="HTMLPurifier_AttrDef_URI_Host" namespace="" name="HTMLPurifier_AttrDef_URI_Host" abstract="false" final="false" start="6" end="60">
  <file path="/home/user/Documents/DVWA-master/build/../src/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/URI" file="Host.php" realpath="/home/user/Documents/DVWA-master/src/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/URI/Host.php" size="2125" time="2017-02-13T08:45:29+00:00" unixtime="1486975529" sha1="425882b1221e84ca3bd6f46bacc55c8f1d0f3aad" relative="external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/AttrDef/URI/Host.php"/>
  <docblock>
    <description compact="Validates a host according to the IPv4, IPv6 and DNS (future) specifications."/>
  </docblock>
  <extends full="HTMLPurifier_AttrDef" namespace="" name="HTMLPurifier_AttrDef"/>
  <member name="ipv4" visibility="protected" static="false" line="12">
    <docblock>
      <description compact="Instance of HTMLPurifier_AttrDef_URI_IPv4 sub-validator"/>
    </docblock>
  </member>
  <member name="ipv6" visibility="protected" static="false" line="17">
    <docblock>
      <description compact="Instance of HTMLPurifier_AttrDef_URI_IPv6 sub-validator"/>
    </docblock>
  </member>
  <constructor name="__construct" start="19" end="22" abstract="false" final="false" static="false" visibility="public"/>
  <method name="validate" start="24" end="58" abstract="false" final="false" static="false" visibility="public">
    <parameter name="string" byreference="false" type="{unknown}"/>
    <parameter name="config" byreference="false" type="{unknown}"/>
    <parameter name="context" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="need to do checks on unusual encodings too" line="35"/>
      <comment value="A regular domain name." line="39"/>
      <comment value="This breaks I18N domain names, but we don't have proper IRI support," line="41"/>
      <comment value="so force users to insert Punycode. If there's complaining we'll" line="42"/>
      <comment value="try to fix things into an international friendly form." line="43"/>
      <comment value="The productions describing this are:" line="45"/>
      <comment value="alpha" line="46"/>
      <comment value="alphanum" line="47"/>
      <comment value="alphanum | &quot;-&quot;" line="48"/>
      <comment value="domainlabel = alphanum | alphanum *( alphanum | &quot;-&quot; ) alphanum" line="49"/>
      <comment value="toplabel    = alpha | alpha *( alphanum | &quot;-&quot; ) alphanum" line="51"/>
      <comment value="hostname    = *( domainlabel &quot;.&quot; ) toplabel [ &quot;.&quot; ]" line="53"/>
    </inline>
  </method>
  <parent full="HTMLPurifier_AttrDef" namespace="" name="HTMLPurifier_AttrDef">
    <member name="minimized" type="boolean" default="false" visibility="public" static="false" line="20">
      <docblock>
        <description compact="Tells us whether or not an HTML attribute is minimized. Has no meaning in other contexts."/>
      </docblock>
    </member>
    <member name="required" type="boolean" default="false" visibility="public" static="false" line="26">
      <docblock>
        <description compact="Tells us whether or not an HTML attribute is required. Has no meaning in other contexts"/>
      </docblock>
    </member>
    <method name="validate" start="35" end="35" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Validates and cleans passed string according to a definition."/>
        <param description="to be validated and cleaned." variable="$string" type="object">
          <type full="String" namespace="" name="String"/>
        </param>
        <param description="HTMLPurifier_Config object." variable="$config" type="object">
          <type full="Mandatory" namespace="" name="Mandatory"/>
        </param>
        <param description="HTMLPurifier_AttrContext object." variable="$context" type="object">
          <type full="Mandatory" namespace="" name="Mandatory"/>
        </param>
      </docblock>
      <parameter name="string" byreference="false" type="{unknown}"/>
      <parameter name="config" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="{unknown}"/>
    </method>
    <method name="parseCDATA" start="58" end="62" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Convenience method that parses a string as if it were CDATA.">This method process a string in the manner specified at
&lt;http://www.w3.org/TR/html4/types.html#h-6.2&gt; by removing
leading and trailing whitespace, ignoring line feeds, and replacing
carriage returns and tabs with spaces.  While most useful for HTML
attributes specified as CDATA, it can also be applied to most CSS
values.</description>
        <note value="This method is not entirely standards compliant, as trim() removes">more types of whitespace than specified in the spec. In practice,
      this is rarely a problem, as those extra characters usually have
      already been removed by HTMLPurifier_Encoder.</note>
        <warning value="This processing is inconsistent with XML's whitespace handling">as specified by section 3.3.3 and referenced XHTML 1.0 section
         4.7.  However, note that we are NOT necessarily
         parsing XML, thus, this behavior may still be correct. We
         assume that newlines have been normalized.</warning>
      </docblock>
      <parameter name="string" byreference="false" type="{unknown}"/>
    </method>
    <method name="make" start="69" end="75" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Factory method for creating this class from a string."/>
        <param description="construction info" variable="$string" type="object">
          <type full="String" namespace="" name="String"/>
        </param>
        <return description="AttrDef object corresponding to $string" type="object">
          <type full="Created" namespace="" name="Created"/>
        </return>
      </docblock>
      <parameter name="string" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="default implementation, return a flyweight of this object." line="70"/>
        <comment value="If $string has an effect on the returned object (i.e. you" line="71"/>
        <comment value="need to overload this method), it is best" line="72"/>
        <comment value="to clone or instantiate new copies. (Instantiation is safer.)" line="73"/>
      </inline>
    </method>
    <method name="mungeRgb" start="81" end="83" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Removes spaces from rgb(0, 0, 0) so that shorthand CSS properties work properly. THIS IS A HACK!"/>
      </docblock>
      <parameter name="string" byreference="false" type="{unknown}"/>
    </method>
  </parent>
</class>
