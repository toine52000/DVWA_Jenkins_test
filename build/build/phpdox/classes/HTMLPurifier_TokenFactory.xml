<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="HTMLPurifier_TokenFactory" namespace="" name="HTMLPurifier_TokenFactory" abstract="false" final="false" start="14" end="92">
  <file path="/home/user/Documents/DVWA-master/build/../src/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier" file="TokenFactory.php" realpath="/home/user/Documents/DVWA-master/src/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/TokenFactory.php" size="2765" time="2017-02-13T08:45:29+00:00" unixtime="1486975529" sha1="5f76da073ba4ec9449f27774cefefc00a63d66cd" relative="external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/TokenFactory.php"/>
  <docblock>
    <description compact="Factory for token generation."/>
    <note value="Doing some benchmarking indicates that the new operator is much">slower than the clone operator (even discounting the cost of the
      constructor).  This class is for that optimization.
      Other then that, there's not much point as we don't
      maintain parallel HTMLPurifier_Token hierarchies (the main reason why
      you'd want to use an abstract factory).</note>
    <todo value="Port DirectLex to use this"/>
  </docblock>
  <member name="p_start" visibility="private" static="false" line="22"/>
  <constructor name="__construct" start="27" end="33" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Generates blank prototypes for cloning."/>
    </docblock>
  </constructor>
  <method name="createStart" start="41" end="45" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Creates a HTMLPurifier_Token_Start."/>
      <param description="name" variable="$name" type="object">
        <type full="Tag" namespace="" name="Tag"/>
      </param>
      <param description="array of attributes" variable="$attr" type="object">
        <type full="Associative" namespace="" name="Associative"/>
      </param>
      <return description="HTMLPurifier_Token_Start" type="object">
        <type full="Generated" namespace="" name="Generated"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="attr" byreference="false" type="array" default=""/>
  </method>
  <method name="createEnd" start="52" end="56" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Creates a HTMLPurifier_Token_End."/>
      <param description="name" variable="$name" type="object">
        <type full="Tag" namespace="" name="Tag"/>
      </param>
      <return description="HTMLPurifier_Token_End" type="object">
        <type full="Generated" namespace="" name="Generated"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
  </method>
  <method name="createEmpty" start="64" end="68" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Creates a HTMLPurifier_Token_Empty."/>
      <param description="name" variable="$name" type="object">
        <type full="Tag" namespace="" name="Tag"/>
      </param>
      <param description="array of attributes" variable="$attr" type="object">
        <type full="Associative" namespace="" name="Associative"/>
      </param>
      <return description="HTMLPurifier_Token_Empty" type="object">
        <type full="Generated" namespace="" name="Generated"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="attr" byreference="false" type="array" default=""/>
  </method>
  <method name="createText" start="75" end="79" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Creates a HTMLPurifier_Token_Text."/>
      <param description="of text token" variable="$data" type="object">
        <type full="Data" namespace="" name="Data"/>
      </param>
      <return description="HTMLPurifier_Token_Text" type="object">
        <type full="Generated" namespace="" name="Generated"/>
      </return>
    </docblock>
    <parameter name="data" byreference="false" type="{unknown}"/>
  </method>
  <method name="createComment" start="86" end="90" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Creates a HTMLPurifier_Token_Comment."/>
      <param description="of comment token" variable="$data" type="object">
        <type full="Data" namespace="" name="Data"/>
      </param>
      <return description="HTMLPurifier_Token_Comment" type="object">
        <type full="Generated" namespace="" name="Generated"/>
      </return>
    </docblock>
    <parameter name="data" byreference="false" type="{unknown}"/>
  </method>
</class>
