<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/user/Documents/DVWA-master/build/../src/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier" file="ElementDef.php" realpath="/home/user/Documents/DVWA-master/src/external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/ElementDef.php" size="5818" time="2017-02-13T08:45:29+00:00" unixtime="1486975529" sha1="fccb5fe6ea9df36476d40b8b47936c9b98cbdd7a" relative="external/phpids/0.6/lib/IDS/vendors/htmlpurifier/HTMLPurifier/ElementDef.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> * Structure that stores an HTML element definition. Used by</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> * HTMLPurifier_HTMLDefinition and HTMLPurifier_HTMLModule.</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> * @note This class is inspected by HTMLPurifier_Printer_HTMLDefinition.</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> *       Please update that class too.</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="9">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">HTMLPurifier_ElementDef</token>
  </line>
  <line no="10">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="11">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="12">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT">     * Does the definition work by itself, or is it created solely</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT">     * for the purpose of merging into another definition?</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="16">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$standalone</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="17">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="18">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT">     * Associative array of attribute name to HTMLPurifier_AttrDef</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT">     * @note Before being processed by HTMLPurifier_AttrCollections</token>
  </line>
  <line no="21">
    <token name="T_DOC_COMMENT">     *       when modules are finalized during</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT">     *       HTMLPurifier_HTMLDefinition-&gt;setup(), this array may also</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT">     *       contain an array at index 0 that indicates which attribute</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT">     *       collections to load into the full array. It may also</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT">     *       contain string indentifiers in lieu of HTMLPurifier_AttrDef,</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT">     *       see HTMLPurifier_AttrTypes on how they are expanded during</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">     *       HTMLPurifier_HTMLDefinition-&gt;setup() processing.</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="29">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$attr</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="30">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="31">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">     * Indexed list of tag's HTMLPurifier_AttrTransform to be done before validation</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="34">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$attr_transform_pre</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="35">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="36">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">     * Indexed list of tag's HTMLPurifier_AttrTransform to be done after validation</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="39">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$attr_transform_post</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="40">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="41">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">     * HTMLPurifier_ChildDef of this tag.</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="44">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$child</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="45">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="46">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT">     * Abstract string representation of internal ChildDef rules. See</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT">     * HTMLPurifier_ContentSets for how this is parsed and then transformed</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">     * into an HTMLPurifier_ChildDef.</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">     * @warning This is a temporary variable that is not available after</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT">     *      being processed by HTMLDefinition</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="53">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$content_model</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="56">
    <token name="T_DOC_COMMENT">     * Value of $child-&gt;type, used to determine which ChildDef to use,</token>
  </line>
  <line no="57">
    <token name="T_DOC_COMMENT">     * used in combination with $content_model.</token>
  </line>
  <line no="58">
    <token name="T_DOC_COMMENT">     * @warning This must be lowercase</token>
  </line>
  <line no="59">
    <token name="T_DOC_COMMENT">     * @warning This is a temporary variable that is not available after</token>
  </line>
  <line no="60">
    <token name="T_DOC_COMMENT">     *      being processed by HTMLDefinition</token>
  </line>
  <line no="61">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="62">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$content_model_type</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="63">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="64">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="66">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="67">
    <token name="T_DOC_COMMENT">     * Does the element have a content model (#PCDATA | Inline)*? This</token>
  </line>
  <line no="68">
    <token name="T_DOC_COMMENT">     * is important for chameleon ins and del processing in </token>
  </line>
  <line no="69">
    <token name="T_DOC_COMMENT">     * HTMLPurifier_ChildDef_Chameleon. Dynamically set: modules don't</token>
  </line>
  <line no="70">
    <token name="T_DOC_COMMENT">     * have to worry about this one.</token>
  </line>
  <line no="71">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="72">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$descendants_are_inline</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="73">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="74">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="75">
    <token name="T_DOC_COMMENT">     * List of the names of required attributes this element has. Dynamically</token>
  </line>
  <line no="76">
    <token name="T_DOC_COMMENT">     * populated by HTMLPurifier_HTMLDefinition::getElement</token>
  </line>
  <line no="77">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="78">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$required_attr</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="79">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="80">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="81">
    <token name="T_DOC_COMMENT">     * Lookup table of tags excluded from all descendants of this tag.</token>
  </line>
  <line no="82">
    <token name="T_DOC_COMMENT">     * @note SGML permits exclusions for all descendants, but this is</token>
  </line>
  <line no="83">
    <token name="T_DOC_COMMENT">     *       not possible with DTDs or XML Schemas. W3C has elected to</token>
  </line>
  <line no="84">
    <token name="T_DOC_COMMENT">     *       use complicated compositions of content_models to simulate</token>
  </line>
  <line no="85">
    <token name="T_DOC_COMMENT">     *       exclusion for children, but we go the simpler, SGML-style</token>
  </line>
  <line no="86">
    <token name="T_DOC_COMMENT">     *       route of flat-out exclusions, which correctly apply to</token>
  </line>
  <line no="87">
    <token name="T_DOC_COMMENT">     *       all descendants and not just children. Note that the XHTML</token>
  </line>
  <line no="88">
    <token name="T_DOC_COMMENT">     *       Modularization Abstract Modules are blithely unaware of such</token>
  </line>
  <line no="89">
    <token name="T_DOC_COMMENT">     *       distinctions.</token>
  </line>
  <line no="90">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$excludes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="92">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="93">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="94">
    <token name="T_DOC_COMMENT">     * Low-level factory constructor for creating new standalone element defs</token>
  </line>
  <line no="95">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="96">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">create</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$content_model</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$content_model_type</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$attr</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">HTMLPurifier_ElementDef</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="98">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">content_model</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$content_model</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="99">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">content_model_type</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$content_model_type</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="100">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">attr</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$attr</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="101">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="102">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="103">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="104">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="105">
    <token name="T_DOC_COMMENT">     * Merges the values of another element definition into this one.</token>
  </line>
  <line no="106">
    <token name="T_DOC_COMMENT">     * Values from the new element def take precedence if a value is</token>
  </line>
  <line no="107">
    <token name="T_DOC_COMMENT">     * not mergeable.</token>
  </line>
  <line no="108">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="109">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">mergeIn</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="110">
    <token name="T_WHITESPACE">        </token>
  </line>
  <line no="111">
    <token name="T_WHITESPACE">        </token>
    <token name="T_COMMENT">// later keys takes precedence</token>
  </line>
  <line no="112">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">attr</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="113">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="114">
    <token name="T_WHITESPACE">                </token>
    <token name="T_COMMENT">// merge in the includes</token>
  </line>
  <line no="115">
    <token name="T_WHITESPACE">                </token>
    <token name="T_COMMENT">// sorry, no way to override an include</token>
  </line>
  <line no="116">
    <token name="T_WHITESPACE">                </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$v2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="117">
    <token name="T_WHITESPACE">                    </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">attr</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$v2</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="118">
    <token name="T_WHITESPACE">                </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="119">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="120">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="121">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="122">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">attr</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">attr</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="123">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="124">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="125">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">attr</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="126">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="127">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">_mergeAssocArray</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">attr_transform_pre</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">attr_transform_pre</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="128">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">_mergeAssocArray</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">attr_transform_post</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">attr_transform_post</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="129">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">_mergeAssocArray</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">excludes</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">excludes</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="130">
    <token name="T_WHITESPACE">        </token>
  </line>
  <line no="131">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_EMPTY">empty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">content_model</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="132">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">content_model</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">' | '</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">content_model</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="133">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">child</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="134">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="135">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_EMPTY">empty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">content_model_type</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="136">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">content_model_type</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">content_model_type</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="137">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">child</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="138">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="139">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">is_null</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">child</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">child</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">child</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="140">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">descendants_are_inline</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">descendants_are_inline</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$def</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">descendants_are_inline</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="141">
    <token name="T_WHITESPACE">        </token>
  </line>
  <line no="142">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="143">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="144">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="145">
    <token name="T_DOC_COMMENT">     * Merges one array into another, removes values which equal false</token>
  </line>
  <line no="146">
    <token name="T_DOC_COMMENT">     * @param $a1 Array by reference that is merged into</token>
  </line>
  <line no="147">
    <token name="T_DOC_COMMENT">     * @param $a2 Array that merges into $a1</token>
  </line>
  <line no="148">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="149">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">_mergeAssocArray</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_AMPERSAND">&amp;</token>
    <token name="T_VARIABLE">$a1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$a2</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="150">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$a2</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="151">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="152">
    <token name="T_WHITESPACE">                </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$a1</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$a1</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="153">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONTINUE">continue</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="154">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="155">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$a1</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$k</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$v</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="156">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="157">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="158">
    <token name="T_WHITESPACE">    </token>
  </line>
  <line no="159">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="160"/>
  <line no="161"/>
  <line no="162"/>
</source>
