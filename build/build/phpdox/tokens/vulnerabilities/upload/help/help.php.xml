<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/home/user/Documents/DVWA-master/build/../src/vulnerabilities/upload/help" file="help.php" realpath="/home/user/Documents/DVWA-master/src/vulnerabilities/upload/help/help.php" size="2424" time="2017-02-13T08:45:28+00:00" unixtime="1486975528" sha1="9034527af5aa1eca56066040023ebd22fa332036" relative="vulnerabilities/upload/help/help.php"/>
  <line no="1">
    <token name="T_INLINE_HTML">&lt;div class="body_padded"&gt;</token>
  </line>
  <line no="2">
    <token name="T_INLINE_HTML">	&lt;h1&gt;Help - File Upload&lt;/h1&gt;</token>
  </line>
  <line no="3"/>
  <line no="4">
    <token name="T_INLINE_HTML">	&lt;div id="code"&gt;</token>
  </line>
  <line no="5">
    <token name="T_INLINE_HTML">	&lt;table width='100%' bgcolor='white' style="border:2px #C0C0C0 solid"&gt;</token>
  </line>
  <line no="6">
    <token name="T_INLINE_HTML">	&lt;tr&gt;</token>
  </line>
  <line no="7">
    <token name="T_INLINE_HTML">	&lt;td&gt;&lt;div id="code"&gt;</token>
  </line>
  <line no="8">
    <token name="T_INLINE_HTML">		&lt;h3&gt;About&lt;/h3&gt;</token>
  </line>
  <line no="9">
    <token name="T_INLINE_HTML">		&lt;p&gt;Uploaded files represent a significant risk to web applications. The first step in many attacks is to get some code to the system to be attacked.</token>
  </line>
  <line no="10">
    <token name="T_INLINE_HTML">			Then the attacker only needs to find a way to get the code executed. Using a file upload helps the attacker accomplish the first step.&lt;/p&gt;</token>
  </line>
  <line no="11"/>
  <line no="12">
    <token name="T_INLINE_HTML">		&lt;p&gt;The consequences of unrestricted file upload can vary, including complete system takeover, an overloaded file system, forwarding attacks to backend systems,</token>
  </line>
  <line no="13">
    <token name="T_INLINE_HTML">			and simple defacement. It depends on what the application does with the uploaded file, including where it is stored.&lt;/p&gt;</token>
  </line>
  <line no="14"/>
  <line no="15">
    <token name="T_INLINE_HTML">		&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;</token>
  </line>
  <line no="16"/>
  <line no="17">
    <token name="T_INLINE_HTML">		&lt;h3&gt;Objective&lt;/h3&gt;</token>
  </line>
  <line no="18">
    <token name="T_INLINE_HTML">		&lt;p&gt;Execute any PHP function of your choosing on the target system (such as </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">dvwaExternalLinkUrlGet</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'https://secure.php.net/manual/en/function.phpinfo.php'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'phpinfo()'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="19">
    <token name="T_INLINE_HTML">			or </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">dvwaExternalLinkUrlGet</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'https://secure.php.net/manual/en/function.system.php'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'system()'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">) thanks to this file upload vulnerability.&lt;/p&gt;</token>
  </line>
  <line no="20"/>
  <line no="21">
    <token name="T_INLINE_HTML">		&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;</token>
  </line>
  <line no="22"/>
  <line no="23">
    <token name="T_INLINE_HTML">		&lt;h3&gt;Low Level&lt;/h3&gt;</token>
  </line>
  <line no="24">
    <token name="T_INLINE_HTML">		&lt;p&gt;Low level will not check the contents of the file being uploaded in any way. It relies only on trust.&lt;/p&gt;</token>
  </line>
  <line no="25">
    <token name="T_INLINE_HTML">		&lt;pre&gt;Spoiler: &lt;span class="spoiler"&gt;Upload any valid PHP file with command in it&lt;/span&gt;.&lt;/pre&gt;</token>
  </line>
  <line no="26"/>
  <line no="27">
    <token name="T_INLINE_HTML">		&lt;br /&gt;</token>
  </line>
  <line no="28"/>
  <line no="29">
    <token name="T_INLINE_HTML">		&lt;h3&gt;Medium Level&lt;/h3&gt;</token>
  </line>
  <line no="30">
    <token name="T_INLINE_HTML">		&lt;p&gt;When using the medium level, it will check the reported file type from the client when its being uploaded.&lt;/p&gt;</token>
  </line>
  <line no="31">
    <token name="T_INLINE_HTML">		&lt;pre&gt;Spoiler: &lt;span class="spoiler"&gt;Worth looking for any restrictions within any "hidden" form fields&lt;/span&gt;.&lt;/pre&gt;</token>
  </line>
  <line no="32"/>
  <line no="33">
    <token name="T_INLINE_HTML">		&lt;br /&gt;</token>
  </line>
  <line no="34"/>
  <line no="35">
    <token name="T_INLINE_HTML">		&lt;h3&gt;High Level&lt;/h3&gt;</token>
  </line>
  <line no="36">
    <token name="T_INLINE_HTML">		&lt;p&gt;Once the file has been received from the client, the server will try to resize any image that was included in the request.&lt;/p&gt;</token>
  </line>
  <line no="37">
    <token name="T_INLINE_HTML">		&lt;pre&gt;Spoiler: &lt;span class="spoiler"&gt;need to link in another vulnerability, such as file includion&lt;/span&gt;.&lt;/pre&gt;</token>
  </line>
  <line no="38"/>
  <line no="39">
    <token name="T_INLINE_HTML">		&lt;br /&gt;</token>
  </line>
  <line no="40"/>
  <line no="41">
    <token name="T_INLINE_HTML">		&lt;h3&gt;Impossible Level&lt;/h3&gt;</token>
  </line>
  <line no="42">
    <token name="T_INLINE_HTML">		&lt;p&gt;This will check everything from all the levels so far, as well then to re-encode the image. This will make a new image, therefor stripping</token>
  </line>
  <line no="43">
    <token name="T_INLINE_HTML">			any "non-image" code (including metadata).&lt;/p&gt;</token>
  </line>
  <line no="44">
    <token name="T_INLINE_HTML">	&lt;/div&gt;&lt;/td&gt;</token>
  </line>
  <line no="45">
    <token name="T_INLINE_HTML">	&lt;/tr&gt;</token>
  </line>
  <line no="46">
    <token name="T_INLINE_HTML">	&lt;/table&gt;</token>
  </line>
  <line no="47"/>
  <line no="48">
    <token name="T_INLINE_HTML">	&lt;/div&gt;</token>
  </line>
  <line no="49"/>
  <line no="50">
    <token name="T_INLINE_HTML">	&lt;br /&gt;</token>
  </line>
  <line no="51"/>
  <line no="52">
    <token name="T_INLINE_HTML">	&lt;p&gt;Reference: </token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">dvwaExternalLinkUrlGet</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'https://www.owasp.org/index.php/Unrestricted_File_Upload'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">&lt;/p&gt;</token>
  </line>
  <line no="53">
    <token name="T_INLINE_HTML">&lt;/div&gt;</token>
  </line>
  <line no="54"/>
  <line no="55"/>
</source>
